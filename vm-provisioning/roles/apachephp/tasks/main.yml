---
- name: Install Apache and PHP
  apt: pkg={{ item }} state=latest
  with_items:
    - apache2
    - php5
    - php5-cli
    - php5-mysql
    - php5-curl
    - php5-gd
    - php5-sqlite
    - php5-xmlrpc
    - php5-imagick
    - php5-mysql
    - php5-mcrypt
    - php5-xdebug
    - php5-dev
    - libapache2-mod-php5
    - phpmyadmin

- name: Activate modules
  command: a2enmod {{ item }} creates=/etc/apache2/mods-enabled/{{ item }}.load
  with_items: [rewrite proxy proxy_http]

- name: Enable PHPMyAdmin
  file: src=/etc/phpmyadmin/apache.conf dest=/etc/apache2/conf-enabled/phpmyadmin.conf owner=root group=root state=link
  notify: Import PHPMyAdmin configuration tables

- name: Create phpmyadmin database
  mysql_db: name=phpmyadmin state=present login_user=root login_password={{ mysql_root_password }}

- name: Update PHPMyAdmin configuration
  template: src=pma_fix.inc.php dest=/etc/phpmyadmin/conf.d/pma_fix.inc.php mode=644

- name: Configure PHP (cli)
  copy: src=php_overrides.ini dest=/etc/php5/cli/conf.d/99-php_overrides.ini mode=644

- name: Configure PHP (apache2)
  copy: src=php_overrides.ini dest=/etc/php5/apache2/conf.d/99-php_overrides.ini mode=644

# Composer
- name: Install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer
  when: install_profiler

- name: Rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer
  when: install_profiler

- name: Make composer executable
  file: path=/usr/local/bin/composer mode=a+x state=file
  when: install_profiler

- name: Create global composer directory
  file: path=/usr/local/composer state=directory owner=vagrant group=vagrant mode=0775
  when: install_profiler

- name: Add g+s flag to composer directory
  file: path=usr/local/composer state=directory mode=g+s
  when: install_profiler

# Uprofiler
- name: Install uprofiler
  shell: export COMPOSER_HOME=/usr/local/composer && composer global require 'friendsofphp/uprofiler=dev-master' creates=/usr/local/composer/vendor/friendsofphp/uprofiler/composer.json
  when: install_profiler

- name: Compile uprofiler
  shell: cd /usr/local/composer/vendor/friendsofphp/uprofiler/extension && phpize && ./configure && make && make install creates=/usr/lib/php5/20121212/uprofiler.so
  when: install_profiler

- name: Configure PHP (cli)
  copy: src=uprofiler.ini dest=/etc/php5/cli/conf.d/21-uprofiler.ini mode=644
  when: install_profiler

- name: Configure PHP (apache2)
  copy: src=uprofiler.ini dest=/etc/php5/apache2/conf.d/21-uprofiler.ini mode=644
  when: install_profiler

# XHGui
- name: Install MongoDB
  apt: pkg={{ item }} state=latest
  with_items:
    - mongodb
    - php5-mongo
  when: install_profiler

- name: Install XHGui
  shell: export COMPOSER_HOME=/usr/local/composer && composer global require --ignore-platform-reqs 'perftools/xhgui=dev-master' creates=/usr/local/composer/vendor/perftools/xhgui/composer.json
  when: install_profiler

- name: Set XHGui permisssions
  file: path=/usr/local/composer/vendor/perftools/xhgui/cache group=vagrant mode=775
  when: install_profiler

- name: Configure XHGui
  template: src=xhgui_config.php dest=/usr/local/composer/vendor/perftools/xhgui/config/config.php owner=vagrant group=vagrant mode=644
  when: install_profiler

- name: Index mongo for XHGui
  script: xhgui_indexes.sh --some-arguments 1234 creates=/root/indexed_xhgui.txt
  when: install_profiler

